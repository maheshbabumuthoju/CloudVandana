Java:

A. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it. 

code:
	import java.util.Random;

public class ArrayShuffler {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(array);

        // Print the shuffled array
        for (int value : array) {
            System.out.print(value + " ");
        }
    }

    public static void shuffleArray(int[] array) {
        int n = array.length;
        Random rand = new Random();

        for (int i = n - 1; i > 0; i--) {
            // Generate a random index between 0 and i (inclusive)
            int j = rand.nextInt(i + 1);

            // Swap array[i] and array[j]
            int temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }
}


	


B. Enter a Roman Number as input and convert it to an integer. (ex IX = 9) 

code:
	import java.util.HashMap;

public class RomanToInteger {
    public static void main(String[] args) {
        String romanNumeral = "IX"; // Change this to your Roman numeral
        int result = romanToInt(romanNumeral);
        System.out.println("Roman Numeral: " + romanNumeral);
        System.out.println("Integer Value: " + result);
    }

    public static int romanToInt(String s) {
        HashMap<Character, Integer> romanMap = new HashMap<>();
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
        romanMap.put('L', 50);
        romanMap.put('C', 100);
        romanMap.put('D', 500);
        romanMap.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            int curValue = romanMap.get(s.charAt(i));
            
            if (curValue < prevValue) {
                result -= curValue;
            } else {
                result += curValue;
            }
            
            prevValue = curValue;
        }

        return result;
    }
}


C. Check if the input is pangram or not. (Pangram is a sentence that contains all the alphabet from a-z) 

code:
	public class PangramChecker {
    public static void main(String[] args) {
        String input = "The quick brown fox jumps over the lazy dog"; // Change this to your input
        boolean isPangram = isPangram(input);
        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }
    }

    public static boolean isPangram(String input) {
        boolean[] alphabetCheck = new boolean[26]; // 26 letters in the English alphabet

        for (int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if ('A' <= c && c <= 'Z') {
                // Convert uppercase letters to lowercase
                c = (char)(c - 'A' + 'a');
            }
            if ('a' <= c && c <= 'z') {
                alphabetCheck[c - 'a'] = true;
            }
        }

        for (boolean isPresent : alphabetCheck) {
            if (!isPresent) {
                return false; // If any letter is missing, it's not a pangram
            }
        }

        return true; // All letters from 'a' to 'z' are present
    }
}

	
